/*
 * Memo App API
 *
 * API description in Markdown.
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package generated

import (
	"github.com/gin-gonic/gin"
)

type MemoHandlerInterface interface {
	CreateMemo(c *gin.Context)
	DeleteMemoById(c *gin.Context)
	GetMemoById(c *gin.Context)
	GetMemoList(c *gin.Context)
	UpdateMemo(c *gin.Context)
}

func NewMemoHandler() MemoHandlerInterface {
	return &MemoHandler{}
}

type MemoHandler struct {
}

// Post /memo
// Create a new memo 
func (api *MemoHandler) CreateMemo(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Delete /memo/:id
// Delete memo by ID 
func (api *MemoHandler) DeleteMemoById(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /memo/:id
// Find memo by ID 
func (api *MemoHandler) GetMemoById(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Get /memo-list
// Returns a list of memos. 
func (api *MemoHandler) GetMemoList(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

// Put /memo/:id
// Update an existing memo 
func (api *MemoHandler) UpdateMemo(c *gin.Context) {
	// Your handler implementation
	c.JSON(200, gin.H{"status": "OK"})
}

